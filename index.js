(function(){
  var assign, moment, Range;
  assign = require('leshdash').assign;
  moment = require('moment');
  Range = require('moment-range');
  assign(Range.prototype, {
    test: function(){
      return 3;
    },
    zoomIn: function(n, t){
      if (!n) {
        n = this.diff() / 4;
      }
      return this.transform(function(it){
        return it.add(n, t);
      }, function(it){
        return it.subtract(n, t);
      });
    },
    zoomOut: function(n, t){
      if (!n) {
        n = this.diff() / 4;
      }
      return this.transform(function(it){
        return it.subtract(n, t);
      }, function(it){
        return it.add(n, t);
      });
    },
    back: function(n, t){
      if (!n) {
        n = this.diff() / 2;
      }
      return this.transform(function(it){
        return it.subtract(n, t);
      });
    },
    forward: function(n, t){
      if (!n) {
        n = this.diff() / 2;
      }
      return this.transform(function(it){
        return it.add(n, t);
      });
    },
    map: function(it){
      return [it(this.start), it(this.end)];
    },
    format: function(format){
      return this.map(function(it){
        return it.format(format);
      });
    },
    transform: function(updateStart, updateEnd){
      if (!updateEnd) {
        updateEnd = updateStart;
      }
      return new Range(updateStart(this.start.clone()), updateEnd(this.end.clone()));
    }
  });
  module.exports = Range;
}).call(this);

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xlc2gvY29kaW5nL3Jlc2JvdS9tb21lbnQtbGVzaHJhbmdlL2luZGV4LmxzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0VBRWMsTUFBWixDQUFBLENBQUEsQ0FBQSxPQUFBLENBQUEsVUFBQSxDQUFBLENBQVk7RUFDWixNQUFBLENBQUEsQ0FBQSxDQUFBLE9BQUEsQ0FBQSxRQUFBO0VBQ2dCLEtBQWhCLENBQUEsQ0FBQSxDQUFBLE9BQUEsQ0FBQSxjQUFBO0VBR0YsT0FBTyxLQUFLLENBQUEsV0FDVjtJQUFBLE1BQU0sUUFBQSxDQUFBO2FBQUc7O0lBRVQsUUFBUSxRQUFBLENBQUEsQ0FBQSxFQUFBLENBQUE7TUFDTixJQUFHLENBQUksQ0FBUDtRQUFjLENBQUUsQ0FBQSxDQUFBLENBQUUsSUFBQyxDQUFBLElBQU0sQ0FBRixDQUFFLENBQUEsQ0FBQSxDQUFFOzthQUMzQixJQUFDLENBQUEsVUFBVyxRQUFBLENBQUEsRUFBQTtlQUFBLEVBQUEsQ0FBQyxJQUFJLEdBQUcsQ0FBSDtTQUFRLFFBQUEsQ0FBQSxFQUFBO2VBQUEsRUFBQSxDQUFDLFNBQVMsR0FBRyxDQUFIO09BQXhCOztJQUViLFNBQVMsUUFBQSxDQUFBLENBQUEsRUFBQSxDQUFBO01BQ1AsSUFBRyxDQUFJLENBQVA7UUFBYyxDQUFFLENBQUEsQ0FBQSxDQUFFLElBQUMsQ0FBQSxJQUFNLENBQUYsQ0FBRSxDQUFBLENBQUEsQ0FBRTs7YUFDM0IsSUFBQyxDQUFBLFVBQVcsUUFBQSxDQUFBLEVBQUE7ZUFBQSxFQUFBLENBQUMsU0FBUyxHQUFHLENBQUg7U0FBUSxRQUFBLENBQUEsRUFBQTtlQUFBLEVBQUEsQ0FBQyxJQUFJLEdBQUcsQ0FBSDtPQUF4Qjs7SUFFYixNQUFNLFFBQUEsQ0FBQSxDQUFBLEVBQUEsQ0FBQTtNQUNKLElBQUcsQ0FBSSxDQUFQO1FBQWMsQ0FBRSxDQUFBLENBQUEsQ0FBRSxJQUFDLENBQUEsSUFBTSxDQUFGLENBQUUsQ0FBQSxDQUFBLENBQUU7O2FBQzNCLElBQUMsQ0FBQSxVQUFXLFFBQUEsQ0FBQSxFQUFBO2VBQUEsRUFBQSxDQUFDLFNBQVMsR0FBRyxDQUFIO09BQVg7O0lBRWIsU0FBUyxRQUFBLENBQUEsQ0FBQSxFQUFBLENBQUE7TUFDUCxJQUFHLENBQUksQ0FBUDtRQUFjLENBQUUsQ0FBQSxDQUFBLENBQUUsSUFBQyxDQUFBLElBQU0sQ0FBRixDQUFFLENBQUEsQ0FBQSxDQUFFOzthQUMzQixJQUFDLENBQUEsVUFBVyxRQUFBLENBQUEsRUFBQTtlQUFBLEVBQUEsQ0FBQyxJQUFJLEdBQUcsQ0FBSDtPQUFOOztJQUViLEtBQUssUUFBQSxDQUFBLEVBQUE7YUFBRyxDQUFFLEdBQUcsSUFBQyxDQUFBLEtBQUYsR0FBVSxHQUFHLElBQUMsQ0FBQSxHQUFGLENBQWhCOztJQUVSLFFBQVEsUUFBQSxDQUFBLE1BQUE7YUFBWSxJQUFDLENBQUEsSUFBSyxRQUFBLENBQUEsRUFBQTtlQUFBLEVBQUEsQ0FBQyxPQUFPLE1BQUE7T0FBVDs7SUFFekIsV0FBVyxRQUFBLENBQUEsV0FBQSxFQUFBLFNBQUE7TUFDVCxJQUFHLENBQUksU0FBUDtRQUFzQixTQUFVLENBQUEsQ0FBQSxDQUFFOztpQkFDOUIsTUFBTyxZQUFZLElBQUMsQ0FBQSxLQUFLLENBQUMsTUFBSyxDQUFaLEdBQWlCLFVBQVUsSUFBQyxDQUFBLEdBQUcsQ0FBQyxNQUFLLENBQVYsQ0FBeEM7O0VBeEJaLENBREs7RUE0QlAsTUFBTSxDQUFDLE9BQVEsQ0FBQSxDQUFBLENBQUUiLCJzb3VyY2VzQ29udGVudCI6WyIjYXV0b2NvbXBpbGVcbnJlcXVpcmUhIHtcbiAgbGVzaGRhc2g6IHsgYXNzaWduIH1cbiAgbW9tZW50XG4gICdtb21lbnQtcmFuZ2UnOiBSYW5nZVxufVxuXG5hc3NpZ24gUmFuZ2U6OiwgZG9cbiAgdGVzdDogLT4gM1xuICBcbiAgem9vbUluOiAobiwgdCkgLT5cbiAgICBpZiBub3QgbiB0aGVuIG4gPSBAZGlmZiEgLyA0XG4gICAgQHRyYW5zZm9ybSAoLmFkZCBuLCB0KSwgKC5zdWJ0cmFjdCBuLCB0KVxuXG4gIHpvb21PdXQ6IChuLCB0KSAtPlxuICAgIGlmIG5vdCBuIHRoZW4gbiA9IEBkaWZmISAvIDRcbiAgICBAdHJhbnNmb3JtICguc3VidHJhY3QgbiwgdCksICguYWRkIG4sIHQpXG5cbiAgYmFjazogKG4sIHQpIC0+XG4gICAgaWYgbm90IG4gdGhlbiBuID0gQGRpZmYhIC8gMlxuICAgIEB0cmFuc2Zvcm0gKC5zdWJ0cmFjdCBuLCB0KVxuICBcbiAgZm9yd2FyZDogKG4sIHQpIC0+XG4gICAgaWYgbm90IG4gdGhlbiBuID0gQGRpZmYhIC8gMlxuICAgIEB0cmFuc2Zvcm0gKC5hZGQgbiwgdClcblxuICBtYXA6IC0+IFsgaXQoQHN0YXJ0KSwgaXQoQGVuZCkgXVxuICBcbiAgZm9ybWF0OiAoZm9ybWF0KSAtPiBAbWFwICguZm9ybWF0IGZvcm1hdClcblxuICB0cmFuc2Zvcm06ICh1cGRhdGVTdGFydCwgdXBkYXRlRW5kKSAtPlxuICAgIGlmIG5vdCB1cGRhdGVFbmQgdGhlbiB1cGRhdGVFbmQgPSB1cGRhdGVTdGFydFxuICAgIG5ldyBSYW5nZSAodXBkYXRlU3RhcnQgQHN0YXJ0LmNsb25lISksICh1cGRhdGVFbmQgQGVuZC5jbG9uZSEpXG4gICAgICBcblxubW9kdWxlLmV4cG9ydHMgPSBSYW5nZVxuIl19
